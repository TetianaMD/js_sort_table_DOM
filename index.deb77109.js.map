{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,gBAAgB,CAAC,MACjC,EAAQ,EAAM,aAAa,CAAC,SAElC,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAoB/B,AAlBmB,AADN,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,OACvB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjC,EACE,IAAM,EAAQ,EACX,gBAAgB,CAAC,KAClB,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GACvB,OAAO,CAAC,QAAS,IACd,EAAQ,EACX,gBAAgB,CAAC,KAClB,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GACvB,OAAO,CAAC,QAAS,WAEpB,AAAI,AAAC,MAAM,WAAW,KAAY,MAAM,WAAW,IAI1C,EAAM,aAAa,CAAC,GAHpB,WAAW,GAAS,WAAW,EAK1C,GAEW,OAAO,CAAC,SAAC,CAApB,EAA4B,OAAA,EAAM,WAAW,CAAC,E,EAChD,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar headers = table.querySelectorAll(\"th\");\nvar tbody = table.querySelector(\"tbody\");\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n        var sortedRows = rows.sort(function(a, b) {\n            var aText = a.querySelectorAll(\"td\")[index].textContent.trim().replace(/[$,]/g, \"\");\n            var bText = b.querySelectorAll(\"td\")[index].textContent.trim().replace(/[$,]/g, \"\");\n            if (!isNaN(parseFloat(aText)) && !isNaN(parseFloat(bText))) return parseFloat(aText) - parseFloat(bText);\n            else return aText.localeCompare(bText);\n        });\n        sortedRows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.deb77109.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tbody = table.querySelector('tbody');\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n    const sortedRows = rows.sort((a, b) => {\n      const aText = a\n        .querySelectorAll('td')\n        [index].textContent.trim()\n        .replace(/[$,]/g, '');\n      const bText = b\n        .querySelectorAll('td')\n        [index].textContent.trim()\n        .replace(/[$,]/g, '');\n\n      if (!isNaN(parseFloat(aText)) && !isNaN(parseFloat(bText))) {\n        return parseFloat(aText) - parseFloat(bText);\n        // parseFloat()- convert text values into num;\n      } else {\n        return aText.localeCompare(bText);\n      }\n    });\n\n    sortedRows.forEach((row) => tbody.appendChild(row));\n  });\n});\n"],"names":["table","document","querySelector","headers","querySelectorAll","tbody","forEach","header","index","addEventListener","sortedRows","rows","Array","from","sort","a","b","aText","textContent","trim","replace","bText","isNaN","parseFloat","localeCompare","row","appendChild"],"version":3,"file":"index.deb77109.js.map"}